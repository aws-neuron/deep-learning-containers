{
    "CVE-2023-6237": {
        "description": "Issue summary: Checking excessively long invalid RSA public keys may take a long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check() to check RSA public keys may experience long delays. Where the key that is being checked has been obtained from an untrusted source this may lead to a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys, a computation is done to confirm that the RSA modulus, n, is composite. For valid RSA keys, n is a product of two or more large primes and this computation completes quickly. However, if n is an overly large prime, then this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key obtained from an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL functions however it is called from the OpenSSL pkey command line application. For that reason that application is also vulnerable",
        "remediation": {
            "recommendation": {
                "text": "None Provided"
            }
        },
        "score": 0.0,
        "score_details": {},
        "severity": "UNTRIAGED",
        "source": "NVD",
        "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2023-6237",
        "status": "ACTIVE",
        "title": "CVE-2023-6237 - pyOpenSSL",
        "vulnerability_id": "CVE-2023-6237",
        "vulnerable_packages": [
            {
                "epoch": 0,
                "filePath": "opt/conda/lib/python3.10/site-packages/pyOpenSSL-24.2.1.dist-info/METADATA",
                "name": "pyOpenSSL",
                "packageManager": "PYTHONPKG",
                "version": "24.2.1"
            }
        ]
    },
    "CVE-2024-31580": {
        "description": "PyTorch before v2.2.0 was discovered to contain a heap buffer overflow vulnerability in the component /runtime/vararg_functions.cpp. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input.",
        "remediation": {
            "recommendation": {
                "text": "None Provided"
            }
        },
        "score": 0.0,
        "score_details": {},
        "severity": "UNTRIAGED",
        "source": "NVD",
        "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2024-31580",
        "status": "ACTIVE",
        "title": "CVE-2024-31580 - torch",
        "vulnerability_id": "CVE-2024-31580",
        "vulnerable_packages": [
            {
                "epoch": 0,
                "filePath": "opt/conda/lib/python3.10/site-packages/torch-2.1.2.dist-info/METADATA",
                "name": "torch",
                "packageManager": "PYTHONPKG",
                "version": "2.1.2"
            }
        ]
    },
    "CVE-2024-31583": {
        "description": "Pytorch before version v2.2.0 was discovered to contain a use-after-free vulnerability in torch/csrc/jit/mobile/interpreter.cpp.",
        "remediation": {
            "recommendation": {
                "text": "None Provided"
            }
        },
        "score": 0.0,
        "score_details": {},
        "severity": "UNTRIAGED",
        "source": "NVD",
        "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2024-31583",
        "status": "ACTIVE",
        "title": "CVE-2024-31583 - torch",
        "vulnerability_id": "CVE-2024-31583",
        "vulnerable_packages": [
            {
                "epoch": 0,
                "filePath": "opt/conda/lib/python3.10/site-packages/torch-2.1.2.dist-info/METADATA",
                "name": "torch",
                "packageManager": "PYTHONPKG",
                "version": "2.1.2"
            }
        ]
    },
    "CVE-2024-35195": {
        "description": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0.",
        "remediation": {
            "recommendation": {
                "text": "None Provided"
            }
        },
        "score": 0.0,
        "score_details": {},
        "severity": "UNTRIAGED",
        "source": "NVD",
        "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2024-35195",
        "status": "ACTIVE",
        "title": "CVE-2024-35195 - requests",
        "vulnerability_id": "CVE-2024-35195",
        "vulnerable_packages": [
            {
                "epoch": 0,
                "filePath": "opt/conda/lib/python3.10/site-packages/requests-2.31.0.dist-info/METADATA",
                "name": "requests",
                "packageManager": "PYTHONPKG",
                "version": "2.31.0"
            }
        ]
    },
    "CVE-2024-37891": {
        "description": "urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achiev",
        "remediation": {
            "recommendation": {
                "text": "None Provided"
            }
        },
        "score": 0.0,
        "score_details": {},
        "severity": "UNTRIAGED",
        "source": "NVD",
        "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2024-37891",
        "status": "ACTIVE",
        "title": "CVE-2024-37891 - urllib3",
        "vulnerability_id": "CVE-2024-37891",
        "vulnerable_packages": [
            {
                "epoch": 0,
                "filePath": "opt/conda/lib/python3.10/site-packages/urllib3-2.0.7.dist-info/METADATA",
                "name": "urllib3",
                "packageManager": "PYTHONPKG",
                "version": "2.0.7"
            }
        ]
    },
    "CVE-2024-6345": {
        "description": "A vulnerability in the package_index module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0.",
        "remediation": {
            "recommendation": {
                "text": "None Provided"
            }
        },
        "score": 0.0,
        "score_details": {},
        "severity": "UNTRIAGED",
        "source": "NVD",
        "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2024-6345",
        "status": "ACTIVE",
        "title": "CVE-2024-6345 - setuptools",
        "vulnerability_id": "CVE-2024-6345",
        "vulnerable_packages": [
            {
                "epoch": 0,
                "filePath": "opt/conda/lib/python3.10/site-packages/setuptools-69.5.1.dist-info/METADATA",
                "name": "setuptools",
                "packageManager": "PYTHONPKG",
                "version": "69.5.1"
            }
        ]
    }
}